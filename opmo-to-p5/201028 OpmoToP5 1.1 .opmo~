;;;---------------------------------------------------------
;;; FILTER MODULATE
;;;---------------------------------------------------------

(setf line1 '((q d4a4 cs5 d5 e4bb4 c5 bb4)
              (q d4a4 cs5 d5 e4bb4 e c5 d5 q bb4)
              (q d4a4 cs5 d5 f4bb4 e5 f5)
              (q e4a4 f5 e5 db4a4 e bb4 a4 q e4)))

(setf line2 '((h. d2 p e2)
              (h. f2 g2)
              (h. a2 g2)
              (h. f2 e2)))

(setf mel (merge-voices line1 line2))
(setf ts-list (get-time-signature line1))

(setf span (get-span ts-list :sum t))

;;;---------------------------------------------------------
;;; SCORE
;;;---------------------------------------------------------
(defparameter P5 '(127.0.0.1 57121))
(setf thd1 (create-osc-thread "thread1" P5))

(defparameter time (rnd-sample 50 '(1/4 1/2 1/4)))

(defparameter values (vector-smooth 0.05 (gen-white-noise 500)))
(defparameter data (gen-osc-data 60 values :time time))

(progn

(send-osc-data thd1 '((1 2) 
                      (2 2) 
                      (3 2)
                      (4 2) 
                      (5 2)))
  ;span = 6 (/ 6 1/128) = 768
  (setf size 768)
  (setf num (rnd-number (/ size 4) 0.01 1.0))
  (setf accu (gen-accumulate num))
  (setf vec-s (vector-smooth 0.9 accu))
  (setf vec1 (gen-sine size 128 1))
  (setf vec2 (vector-round 0.0001 1.0 vec-s))
  (setf vecsum (vector-multiply vec1 vec2)) 

  (list-plot vecsum :join-points t)

  (def-score filterExample
             (:title "Filter Modulate"
              :composer "Jorgalad"
              :key-signature '(d min)
              :time-signature ts-list
              :tempo 90
              :layout (grand-layout 'inst1))

    (inst1
     :omn mel
     :channel 5      
     :port "FROM OpusModus I"
     :controllers (
                   1 (gen-controller span vecsum :time 1/128 :loop t)
                   )
     ))

  ;(audition-musicxml-last-score)
  ;(play-midi-last-score) 
  (audition-last-score)
  )